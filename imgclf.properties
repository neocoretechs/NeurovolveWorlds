#
# Properties file to configure Neurovolve evolutionary program runs for image recognizer
#
World: Default
# Preloads types and data values (optional)
PreLoadTypes: 
# Data values
PreLoadValues:
# Preload stored solvers of same argument type from database at RemoteIP, RemotePort?
PreLoadSolvers: false
# Fitness function class to use, bytecode loaded from remote bytecode server RemoteIP port 9999
FitnessFunctions:imgclf
# Population level (int) 128 is max for 26 gigabyte heap
Population: 128
# Number of generation runs maximum
Generations: 5000
# Number of fully fit entries to commit after finding during sustained ratcheting runs
CommitAfter: 5
# Maximum number of tests in fitness function, this is overidden by setStepFactors in fitness function
MaxTests: 1
# Maximum steps per test in fitness function, overridden by setStepfactors in fitness function to size of image dataset
MaxSteps: 400
# Input Nodes to Neural net, 128x128 pixels x 4 channels
InputNodes: 65536
# Output Nodes to Neural Net, 6 categories of images for test
OutputNodes: 6
# hidden Nodes to Neural Net, 50 hidden nodes per category
HiddenNodes: 300
# Hidden Layer to Neural Net, single layer perceptron architecture
HiddenLayers: 1
# Local host name or IP address of client to Neurosome database
LocalIP: VOLVATRON
# Remote host name or IP of server to Neurosome database
RemoteIP: VOLVATRON
# Remote port of server
RemotePort: 9010
# Maximum number of threads to execute fitness function (based on CPU cores)
MaxFitnessThreads: 48
# Reproduction Probability percentage
ReproductionProbability: .1
# Crossover probability reproduction + crossover must equal 1
CrossoverProbability: .9
# Mutation probability if crossover not selected
MutationProbability: .25
# Mutation rate, if mutation, each row and column has this probability of being mutated by gaussian/5 capped at 1
MutationRate: .25
# start of boolean values
# DEBUG
DEBUG: false
# break generational run at finding fitness of 1.0 (best fitness)
BREAKBEST: true
# if BREAKBEST is true, this is the cost to break on
BreakCost: 0
# show crossover statistics
SHOWCROSSSTATS: true
# show memory usage during runs
SHOWMEM: false
# Show fitness statistics
SHOWFIT: true
# show truth table during run
SHOWTRUTH: true
# show variables in preload dring run
SHOWVARIABLES: false
# Write fitness for Neurosome each generation pre-sort by fitness to debug bad fitness function cost values breaking sort
WRITEFITNESS: false
# If WRITEFITNESS true, name of fitness file
FitnessFile: C:/etc/population.txt
# Randomize activation function for layers within Neurosomes
RandomizeActivationMax: true
# If max randomization, then generate random activation on all layers, or just different functions for input and output, and hidden layers
RandomizeActivationAllLayers: false